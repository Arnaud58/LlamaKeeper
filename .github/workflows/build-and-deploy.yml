name: Build and Deploy

on:
  push:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: '3.10'

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        cd backend
        pip install -r requirements.txt
        pip install build twine

    - name: Build package
      shell: bash -l {0}
      run: |
        cd backend
        python -m build

    - name: Publish to PyPI
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      shell: bash -l {0}
      run: |
        cd backend
        python -m twine upload dist/*

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/llamakeeper-backend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/llamakeeper-backend:${{ github.ref_name }}